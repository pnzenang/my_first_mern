{
    "sourceFile": "models/Job.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1683880501478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1683880554629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import mongoose from 'mongoose';\n \n-const UserSchema = new mongoose.Schema(\n+const JobSchema = new mongoose.Schema(\n   {\n     name: {\n       type: String,\n       required: [true, 'Please provide name'],\n@@ -39,5 +39,5 @@\n   },\n   { timestamps: true }\n );\n \n-export default mongoose.model('User', UserSchema);\n+export default mongoose.model('User', JobSchema);\n"
                },
                {
                    "date": 1683880630762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,17 @@\n import mongoose from 'mongoose';\n \n const JobSchema = new mongoose.Schema(\n   {\n-    name: {\n+    company: {\n       type: String,\n-      required: [true, 'Please provide name'],\n-      minlength: 3,\n-      maxlength: 20,\n-      trim: true\n+      required: [true, 'Please provide company'],\n+      maxlength: 50\n     },\n-    email: {\n+    position: {\n       type: String,\n-      required: [true, 'Please provide email'],\n-      validate: {\n-        validator: validator.isEmail,\n-        message: 'Please provide a valid email'\n-      },\n-      unique: true\n+      required: [true, 'Please provide position'],\n+      maxlength: 100\n     },\n     password: {\n       type: String,\n       required: [true, 'Please provide password'],\n"
                },
                {
                    "date": 1683880740649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,12 @@\n       type: String,\n       required: [true, 'Please provide position'],\n       maxlength: 100\n     },\n-    password: {\n+    status: {\n       type: String,\n-      required: [true, 'Please provide password'],\n-      minlength: 6,\n-      select: false\n+      enum: ['interview', 'declined', 'pending'],\n+      default: 'pending'\n     },\n     lastName: {\n       type: String,\n       trim: true,\n"
                },
                {
                    "date": 1683880751253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,20 +15,8 @@\n     status: {\n       type: String,\n       enum: ['interview', 'declined', 'pending'],\n       default: 'pending'\n-    },\n-    lastName: {\n-      type: String,\n-      trim: true,\n-      maxlength: 20,\n-      default: 'lastName'\n-    },\n-    location: {\n-      type: String,\n-      trim: true,\n-      maxlength: 20,\n-      default: 'my city'\n     }\n   },\n   { timestamps: true }\n );\n"
                },
                {
                    "date": 1683880781705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,13 @@\n     status: {\n       type: String,\n       enum: ['interview', 'declined', 'pending'],\n       default: 'pending'\n+    },\n+    jobType: {\n+      type: String,\n+      enum: ['interview', 'declined', 'pending'],\n+      default: 'pending'\n     }\n   },\n   { timestamps: true }\n );\n"
                },
                {
                    "date": 1683880831960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       default: 'pending'\n     },\n     jobType: {\n       type: String,\n-      enum: ['interview', 'declined', 'pending'],\n+      enum: ['full-time', 'part-time', 'remote', 'internship'],\n       default: 'pending'\n     }\n   },\n   { timestamps: true }\n"
                },
                {
                    "date": 1683880848400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     },\n     jobType: {\n       type: String,\n       enum: ['full-time', 'part-time', 'remote', 'internship'],\n-      default: 'pending'\n+      default: 'full-time'\n     }\n   },\n   { timestamps: true }\n );\n"
                },
                {
                    "date": 1683880954527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,13 @@\n     jobType: {\n       type: String,\n       enum: ['full-time', 'part-time', 'remote', 'internship'],\n       default: 'full-time'\n+    },\n+    jobLocation: {\n+      type: String,\n+      default: 'my city',\n+      required: true\n     }\n   },\n   { timestamps: true }\n );\n"
                },
                {
                    "date": 1683881051495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,13 @@\n     jobLocation: {\n       type: String,\n       default: 'my city',\n       required: true\n+    },\n+    createdBy: {\n+      type: mongoose.Types.ObjectId,\n+      ref: 'User',\n+      required: [true, 'Please provide user']\n     }\n   },\n   { timestamps: true }\n );\n"
                },
                {
                    "date": 1683881075705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,5 +35,5 @@\n   },\n   { timestamps: true }\n );\n \n-export default mongoose.model('User', JobSchema);\n+export default mongoose.model('Job', JobSchema);\n"
                }
            ],
            "date": 1683880501478,
            "name": "Commit-0",
            "content": "import mongoose from 'mongoose';\n\nconst UserSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: [true, 'Please provide name'],\n      minlength: 3,\n      maxlength: 20,\n      trim: true\n    },\n    email: {\n      type: String,\n      required: [true, 'Please provide email'],\n      validate: {\n        validator: validator.isEmail,\n        message: 'Please provide a valid email'\n      },\n      unique: true\n    },\n    password: {\n      type: String,\n      required: [true, 'Please provide password'],\n      minlength: 6,\n      select: false\n    },\n    lastName: {\n      type: String,\n      trim: true,\n      maxlength: 20,\n      default: 'lastName'\n    },\n    location: {\n      type: String,\n      trim: true,\n      maxlength: 20,\n      default: 'my city'\n    }\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.model('User', UserSchema);\n"
        }
    ]
}