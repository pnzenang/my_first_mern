{
    "sourceFile": "1frontend/src/context/appContext.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 77,
            "patches": [
                {
                    "date": 1683462872419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1683463146998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,12 @@\n     }\n     clearAlert();\n   };\n \n+  const toggleSidebar = () => {\n+    dispatch({ type: TOGGLE_SIDEBAR });\n+  };\n+\n   return (\n     <AppContext.Provider\n       value={{ ...state, displayAlert, clearAlert, registerUser, loginUser }}\n     >\n"
                },
                {
                    "date": 1683463173630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,16 @@\n   };\n \n   return (\n     <AppContext.Provider\n-      value={{ ...state, displayAlert, clearAlert, registerUser, loginUser }}\n+      value={{\n+        ...state,\n+        displayAlert,\n+        clearAlert,\n+        registerUser,\n+        loginUser,\n+        toggleSidebar\n+      }}\n     >\n       {children}\n     </AppContext.Provider>\n   );\n"
                },
                {
                    "date": 1683463401288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n   alertType: '',\n   user: user ? JSON.parse(user) : null,\n   token: token,\n   userLocation: userLocation || '',\n-  jobLocation: userLocation || ''\n+  jobLocation: userLocation || '',\n+  showSidebar: false\n };\n const AppContext = React.createContext();\n \n const AppProvider = ({ children }) => {\n"
                },
                {
                    "date": 1683464893914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n   REGISTER_USER_ERROR,\n   LOGIN_USER_BEGIN,\n   LOGIN_USER_SUCCESS,\n   LOGIN_USER_ERROR,\n-  TOGGLE_SIDEBAR\n+  TOGGLE_SIDEBAR,\n+  LOGOUT_USER\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n@@ -98,8 +99,13 @@\n   const toggleSidebar = () => {\n     dispatch({ type: TOGGLE_SIDEBAR });\n   };\n \n+  const logoutUser = () => {\n+    dispatch({ type: LOGOUT_USER });\n+    removeUserFromLocalStorage();\n+  };\n+\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1683465280687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,10 @@\n         displayAlert,\n         clearAlert,\n         registerUser,\n         loginUser,\n-        toggleSidebar\n+        toggleSidebar,\n+        logoutUser\n       }}\n     >\n       {children}\n     </AppContext.Provider>\n"
                },
                {
                    "date": 1683728048881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,8 +104,12 @@\n     dispatch({ type: LOGOUT_USER });\n     removeUserFromLocalStorage();\n   };\n \n+  const updateUser = async (currentUser) => {\n+    console.log(currentUser);\n+  };\n+\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1683728083931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,10 @@\n         clearAlert,\n         registerUser,\n         loginUser,\n         toggleSidebar,\n-        logoutUser\n+        logoutUser,\n+        updateUser\n       }}\n     >\n       {children}\n     </AppContext.Provider>\n"
                },
                {
                    "date": 1683774809301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,22 @@\n     removeUserFromLocalStorage();\n   };\n \n   const updateUser = async (currentUser) => {\n-    console.log(currentUser);\n+    try {\n+      const { data } = await axios.patch(\n+        '/api/v1/auth/updateUser',\n+        currentUser,\n+        {\n+          headers: {\n+            Authorization: `Bearer ${state.token}`\n+          }\n+        }\n+      );\n+      console.log(data);\n+    } catch (error) {\n+      console.log(error.response);\n+    }\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1683874477943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,14 +108,9 @@\n   const updateUser = async (currentUser) => {\n     try {\n       const { data } = await axios.patch(\n         '/api/v1/auth/updateUser',\n-        currentUser,\n-        {\n-          headers: {\n-            Authorization: `Bearer ${state.token}`\n-          }\n-        }\n+        currentUser\n       );\n       console.log(data);\n     } catch (error) {\n       console.log(error.response);\n"
                },
                {
                    "date": 1683874998138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,17 @@\n \n const AppProvider = ({ children }) => {\n   const [state, dispatch] = useReducer(reducer, initialState);\n \n+  //axios\n+\n+  const authFetch = axios.create({\n+    baseURL: '/api/v1',\n+    headers: {\n+      Authorization: `Bearer ${state.token}`\n+    }\n+  });\n+\n   const displayAlert = () => {\n     dispatch({ type: DISPLAY_ALERT });\n     clearAlert();\n   };\n"
                },
                {
                    "date": 1683875046855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n   };\n \n   const updateUser = async (currentUser) => {\n     try {\n-      const { data } = await axios.patch(\n+      const { data } = await authFetch.patch(\n         '/api/v1/auth/updateUser',\n         currentUser\n       );\n       console.log(data);\n"
                },
                {
                    "date": 1683875229426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,12 +115,9 @@\n   };\n \n   const updateUser = async (currentUser) => {\n     try {\n-      const { data } = await authFetch.patch(\n-        '/api/v1/auth/updateUser',\n-        currentUser\n-      );\n+      const { data } = await authFetch.patch('/auth/updateUser', currentUser);\n       console.log(data);\n     } catch (error) {\n       console.log(error.response);\n     }\n"
                },
                {
                    "date": 1683875508081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,12 +36,9 @@\n \n   //axios\n \n   const authFetch = axios.create({\n-    baseURL: '/api/v1',\n-    headers: {\n-      Authorization: `Bearer ${state.token}`\n-    }\n+    baseURL: '/api/v1'\n   });\n \n   const displayAlert = () => {\n     dispatch({ type: DISPLAY_ALERT });\n"
                },
                {
                    "date": 1683875521699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,10 @@\n   const authFetch = axios.create({\n     baseURL: '/api/v1'\n   });\n \n+  //request\n+\n   const displayAlert = () => {\n     dispatch({ type: DISPLAY_ALERT });\n     clearAlert();\n   };\n"
                },
                {
                    "date": 1683875821525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,17 @@\n     baseURL: '/api/v1'\n   });\n \n   //request\n+  authFetch.interceptors.request.use(\n+    (config) => {\n+      config.headers.common['Authorization'] = `Bearer ${state.token}`;\n+      return config;\n+    },\n+    (error) => {\n+      return Promise.reject(error);\n+    }\n+  );\n \n   const displayAlert = () => {\n     dispatch({ type: DISPLAY_ALERT });\n     clearAlert();\n"
                },
                {
                    "date": 1683875912293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,18 @@\n     (error) => {\n       return Promise.reject(error);\n     }\n   );\n+  //response\n+  authFetch.interceptors.response.use(\n+    (response) => {\n+      return response;\n+    },\n+    (error) => {\n+      console.log(error);\n+      return Promise.reject(error);\n+    }\n+  );\n \n   const displayAlert = () => {\n     dispatch({ type: DISPLAY_ALERT });\n     clearAlert();\n"
                },
                {
                    "date": 1683875991268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,12 @@\n     (response) => {\n       return response;\n     },\n     (error) => {\n-      console.log(error);\n+      console.log(error.response);\n+      if (error.response.status === 401) {\n+        console.log('AUTH ERROR');\n+      }\n       return Promise.reject(error);\n     }\n   );\n \n"
                },
                {
                    "date": 1683876024000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n     try {\n       const { data } = await authFetch.patch('/auth/updateUser', currentUser);\n       console.log(data);\n     } catch (error) {\n-      console.log(error.response);\n+      // console.log(error.response);\n     }\n   };\n \n   return (\n"
                },
                {
                    "date": 1683876900055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n   //request\n   authFetch.interceptors.request.use(\n     (config) => {\n-      config.headers.common['Authorization'] = `Bearer ${state.token}`;\n+      config.headers['Authorization'] = `Bearer ${state.token}`;\n       return config;\n     },\n     (error) => {\n       return Promise.reject(error);\n"
                },
                {
                    "date": 1683877067925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n   //request\n   authFetch.interceptors.request.use(\n     (config) => {\n-      config.headers['Authorization'] = `Bearer ${state.token}`;\n+      // config.headers['Authorization'] = `Bearer ${state.token}`;\n       return config;\n     },\n     (error) => {\n       return Promise.reject(error);\n"
                },
                {
                    "date": 1683877290715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n   //request\n   authFetch.interceptors.request.use(\n     (config) => {\n-      // config.headers['Authorization'] = `Bearer ${state.token}`;\n+      config.headers['Authorization'] = `Bearer ${state.token}`;\n       return config;\n     },\n     (error) => {\n       return Promise.reject(error);\n"
                },
                {
                    "date": 1683877333230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n   //request\n   authFetch.interceptors.request.use(\n     (config) => {\n-      config.headers['Authorization'] = `Bearer ${state.token}`;\n+      // config.headers['Authorization'] = `Bearer ${state.token}`;\n       return config;\n     },\n     (error) => {\n       return Promise.reject(error);\n"
                },
                {
                    "date": 1683877414339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \n   //request\n   authFetch.interceptors.request.use(\n     (config) => {\n-      // config.headers['Authorization'] = `Bearer ${state.token}`;\n+      config.headers['Authorization'] = `Bearer ${state.token}`;\n       return config;\n     },\n     (error) => {\n       return Promise.reject(error);\n"
                },
                {
                    "date": 1683877627128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,12 @@\n   LOGIN_USER_BEGIN,\n   LOGIN_USER_SUCCESS,\n   LOGIN_USER_ERROR,\n   TOGGLE_SIDEBAR,\n-  LOGOUT_USER\n+  LOGOUT_USER,\n+  UPDATE_USER_BEGIN,\n+  UPDATE_USER_SUCCESS,\n+  UPDATE_USER_ERROR\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n"
                },
                {
                    "date": 1683877970592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,14 +138,19 @@\n     removeUserFromLocalStorage();\n   };\n \n   const updateUser = async (currentUser) => {\n+    dispatch({ type: UPDATE_USER_BEGIN });\n     try {\n       const { data } = await authFetch.patch('/auth/updateUser', currentUser);\n-      console.log(data);\n-    } catch (error) {\n-      // console.log(error.response);\n-    }\n+      const { user, location, token } = data;\n+\n+      dispatch({\n+        type: UPDATE_USER_SUCCESS,\n+        payload: { user, location, token }\n+      });\n+      addUserToLocalStorage({ user, location, token });\n+    } catch (error) {}\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1683878078295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,14 @@\n         type: UPDATE_USER_SUCCESS,\n         payload: { user, location, token }\n       });\n       addUserToLocalStorage({ user, location, token });\n-    } catch (error) {}\n+    } catch (error) {\n+      dispatch({\n+        type: UPDATE_USER_ERROR,\n+        payload: { msg: error.response.data.msg }\n+      });\n+    }\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1683878400972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,8 +154,9 @@\n         type: UPDATE_USER_ERROR,\n         payload: { msg: error.response.data.msg }\n       });\n     }\n+    clearAlert();\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1683878701947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     },\n     (error) => {\n       console.log(error.response);\n       if (error.response.status === 401) {\n-        console.log('AUTH ERROR');\n+        logoutUser();\n       }\n       return Promise.reject(error);\n     }\n   );\n"
                },
                {
                    "date": 1683878708251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n \n   //request\n   authFetch.interceptors.request.use(\n     (config) => {\n-      config.headers['Authorization'] = `Bearer ${state.token}`;\n+      // config.headers['Authorization'] = `Bearer ${state.token}`;\n       return config;\n     },\n     (error) => {\n       return Promise.reject(error);\n"
                },
                {
                    "date": 1683879158016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,12 +149,14 @@\n         payload: { user, location, token }\n       });\n       addUserToLocalStorage({ user, location, token });\n     } catch (error) {\n-      dispatch({\n-        type: UPDATE_USER_ERROR,\n-        payload: { msg: error.response.data.msg }\n-      });\n+      if (error.response.status !== 401) {\n+        dispatch({\n+          type: UPDATE_USER_ERROR,\n+          payload: { msg: error.response.data.msg }\n+        });\n+      }\n     }\n     clearAlert();\n   };\n \n"
                },
                {
                    "date": 1683879309068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n \n   //request\n   authFetch.interceptors.request.use(\n     (config) => {\n-      // config.headers['Authorization'] = `Bearer ${state.token}`;\n+      config.headers['Authorization'] = `Bearer ${state.token}`;\n       return config;\n     },\n     (error) => {\n       return Promise.reject(error);\n"
                },
                {
                    "date": 1683879314247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     (response) => {\n       return response;\n     },\n     (error) => {\n-      console.log(error.response);\n+      // console.log(error.response);\n       if (error.response.status === 401) {\n         logoutUser();\n       }\n       return Promise.reject(error);\n"
                },
                {
                    "date": 1683944895116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,15 @@\n   alertType: '',\n   user: user ? JSON.parse(user) : null,\n   token: token,\n   userLocation: userLocation || '',\n+  showSidebar: false,\n+  isEditing: false,\n+  editJobId: '',\n+  position: '',\n+  company: '',\n   jobLocation: userLocation || '',\n-  showSidebar: false\n+  jobTypeOptions: ['full-time', 'part-time', 'remote', 'internship']\n };\n const AppContext = React.createContext();\n \n const AppProvider = ({ children }) => {\n"
                },
                {
                    "date": 1683944991225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,12 @@\n   editJobId: '',\n   position: '',\n   company: '',\n   jobLocation: userLocation || '',\n-  jobTypeOptions: ['full-time', 'part-time', 'remote', 'internship']\n+  jobTypeOptions: ['full-time', 'part-time', 'remote', 'internship'],\n+  jobType: 'full-time',\n+  statusOptions: ['interview', 'declined', 'pending'],\n+  status: 'pending'\n };\n const AppContext = React.createContext();\n \n const AppProvider = ({ children }) => {\n"
                },
                {
                    "date": 1683965912667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,10 @@\n   TOGGLE_SIDEBAR,\n   LOGOUT_USER,\n   UPDATE_USER_BEGIN,\n   UPDATE_USER_SUCCESS,\n-  UPDATE_USER_ERROR\n+  UPDATE_USER_ERROR,\n+  HANDLE_CHANGE\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n"
                },
                {
                    "date": 1683966159465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,8 +168,12 @@\n     }\n     clearAlert();\n   };\n \n+  const handleChange = ({ name, value }) => {\n+    dispatch({ type: HANDLE_CHANGE, payload: { name, value } });\n+  };\n+\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1683966176089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,10 @@\n         registerUser,\n         loginUser,\n         toggleSidebar,\n         logoutUser,\n-        updateUser\n+        updateUser,\n+        handleChange\n       }}\n     >\n       {children}\n     </AppContext.Provider>\n"
                },
                {
                    "date": 1683967550248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,10 @@\n   LOGOUT_USER,\n   UPDATE_USER_BEGIN,\n   UPDATE_USER_SUCCESS,\n   UPDATE_USER_ERROR,\n-  HANDLE_CHANGE\n+  HANDLE_CHANGE,\n+  CLEAR_VALUES\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n@@ -172,8 +173,12 @@\n   const handleChange = ({ name, value }) => {\n     dispatch({ type: HANDLE_CHANGE, payload: { name, value } });\n   };\n \n+  const clearValues = () => {\n+    dispatch({ type: CLEAR_VALUES });\n+  };\n+\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1683967647758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,10 @@\n         loginUser,\n         toggleSidebar,\n         logoutUser,\n         updateUser,\n-        handleChange\n+        handleChange,\n+        clearValues\n       }}\n     >\n       {children}\n     </AppContext.Provider>\n"
                },
                {
                    "date": 1683969873655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,12 @@\n   UPDATE_USER_BEGIN,\n   UPDATE_USER_SUCCESS,\n   UPDATE_USER_ERROR,\n   HANDLE_CHANGE,\n-  CLEAR_VALUES\n+  CLEAR_VALUES,\n+  CREATE_JOB_BEGIN,\n+  CREATE_JOB_SUCCESS,\n+  CREATE_JOB_ERROR\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n@@ -177,8 +180,15 @@\n   const clearValues = () => {\n     dispatch({ type: CLEAR_VALUES });\n   };\n \n+  const createJob = async () => {\n+    dispatch({ type: CREATE_JOB_BEGIN });\n+    try {\n+      const { position, company, jobLocation, jobType, status } = state;\n+    } catch (error) {}\n+  };\n+\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1683969998107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,8 +184,15 @@\n   const createJob = async () => {\n     dispatch({ type: CREATE_JOB_BEGIN });\n     try {\n       const { position, company, jobLocation, jobType, status } = state;\n+      await authFetch.post('/jobs', {\n+        company,\n+        position,\n+        jobLocation,\n+        jobType,\n+        status\n+      });\n     } catch (error) {}\n   };\n \n   return (\n"
                },
                {
                    "date": 1683970202075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,17 @@\n         jobLocation,\n         jobType,\n         status\n       });\n-    } catch (error) {}\n+      dispatch({ type: CREATE_JOB_SUCCESS });\n+      dispatch({ type: CLEAR_VALUES });\n+    } catch (error) {\n+      if (error.response.status === 401) return;\n+      dispatch({\n+        type: CREATE_JOB_ERROR,\n+        payload: { msg: error.response.data.msg }\n+      });\n+    }\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1683970271899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,9 +214,10 @@\n         toggleSidebar,\n         logoutUser,\n         updateUser,\n         handleChange,\n-        clearValues\n+        clearValues,\n+        createJob\n       }}\n     >\n       {children}\n     </AppContext.Provider>\n"
                },
                {
                    "date": 1683970900535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,8 +200,9 @@\n         type: CREATE_JOB_ERROR,\n         payload: { msg: error.response.data.msg }\n       });\n     }\n+    clearAlert();\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1683972748767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,13 @@\n   jobLocation: userLocation || '',\n   jobTypeOptions: ['full-time', 'part-time', 'remote', 'internship'],\n   jobType: 'full-time',\n   statusOptions: ['interview', 'declined', 'pending'],\n-  status: 'pending'\n+  status: 'pending',\n+  jobs: [],\n+  totalJobs: 0,\n+  numberOfPages: 1,\n+  page: 1\n };\n const AppContext = React.createContext();\n \n const AppProvider = ({ children }) => {\n"
                },
                {
                    "date": 1683973371213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,11 @@\n   HANDLE_CHANGE,\n   CLEAR_VALUES,\n   CREATE_JOB_BEGIN,\n   CREATE_JOB_SUCCESS,\n-  CREATE_JOB_ERROR\n+  CREATE_JOB_ERROR,\n+  GET_JOBS_BEGIN,\n+  GET_JOBS_SUCCESS\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n"
                },
                {
                    "date": 1683973639833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,8 +209,17 @@\n     }\n     clearAlert();\n   };\n \n+  const getJobs = async () => {\n+    let url = `/jobs`;\n+\n+    dispatch({ type: GET_JOBS_BEGIN });\n+    try {\n+      const { data } = await authFetch(url);\n+    } catch (error) {}\n+  };\n+\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1683973862316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,8 +215,17 @@\n \n     dispatch({ type: GET_JOBS_BEGIN });\n     try {\n       const { data } = await authFetch(url);\n+      const { jobs, totalJobs, numberOfPages } = data;\n+      dispatch({\n+        type: GET_JOBS_SUCCESS,\n+        payload: {\n+          jobs,\n+          totalJobs,\n+          numberOfPages\n+        }\n+      });\n     } catch (error) {}\n   };\n \n   return (\n"
                },
                {
                    "date": 1683973887663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,11 @@\n           totalJobs,\n           numberOfPages\n         }\n       });\n-    } catch (error) {}\n+    } catch (error) {\n+      console.log(error.response);\n+    }\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1683973918757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,8 +227,9 @@\n       });\n     } catch (error) {\n       console.log(error.response);\n     }\n+    clearAlert();\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1683974429866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useReducer, useContext } from 'react';\n+import React, { useReducer, useContext, useEffect } from 'react';\n import reducer from './reducer';\n import axios from 'axios';\n import {\n   DISPLAY_ALERT,\n@@ -230,8 +230,12 @@\n     }\n     clearAlert();\n   };\n \n+  useEffect(() => {\n+    getJobs();\n+  }, []);\n+\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1683974584901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useReducer, useContext, useEffect } from 'react';\n+import React, { useReducer, useContext } from 'react';\n import reducer from './reducer';\n import axios from 'axios';\n import {\n   DISPLAY_ALERT,\n@@ -230,12 +230,8 @@\n     }\n     clearAlert();\n   };\n \n-  useEffect(() => {\n-    getJobs();\n-  }, []);\n-\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1683974795062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,8 +226,9 @@\n         }\n       });\n     } catch (error) {\n       console.log(error.response);\n+      logoutUser();\n     }\n     clearAlert();\n   };\n \n"
                },
                {
                    "date": 1683987088692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n         }\n       });\n     } catch (error) {\n       console.log(error.response);\n-      logoutUser();\n+      // logoutUser();\n     }\n     clearAlert();\n   };\n \n@@ -244,9 +244,10 @@\n         logoutUser,\n         updateUser,\n         handleChange,\n         clearValues,\n-        createJob\n+        createJob,\n+        getJobs\n       }}\n     >\n       {children}\n     </AppContext.Provider>\n"
                },
                {
                    "date": 1684000723476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,8 +231,12 @@\n     }\n     clearAlert();\n   };\n \n+  const setEditJob = (id) => {\n+    log(`set edit job :${id}`);\n+  };\n+\n   return (\n     <AppContext.Provider\n       value={{\n         ...state,\n"
                },
                {
                    "date": 1684000746438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -232,9 +232,9 @@\n     clearAlert();\n   };\n \n   const setEditJob = (id) => {\n-    log(`set edit job :${id}`);\n+    console.log(`set edit job :${id}`);\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1684001228559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,8 +234,11 @@\n \n   const setEditJob = (id) => {\n     console.log(`set edit job :${id}`);\n   };\n+  const deleteJob = (id) => {\n+    console.log(`delete job :${id}`);\n+  };\n \n   return (\n     <AppContext.Provider\n       value={{\n"
                },
                {
                    "date": 1684001416219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,9 +252,11 @@\n         updateUser,\n         handleChange,\n         clearValues,\n         createJob,\n-        getJobs\n+        getJobs,\n+        setEditJob,\n+        deleteJob\n       }}\n     >\n       {children}\n     </AppContext.Provider>\n"
                },
                {
                    "date": 1684012752487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,10 @@\n   CREATE_JOB_BEGIN,\n   CREATE_JOB_SUCCESS,\n   CREATE_JOB_ERROR,\n   GET_JOBS_BEGIN,\n-  GET_JOBS_SUCCESS\n+  GET_JOBS_SUCCESS,\n+  SET_EDIT_JOB\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n"
                },
                {
                    "date": 1684012884985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,9 +233,9 @@\n     clearAlert();\n   };\n \n   const setEditJob = (id) => {\n-    console.log(`set edit job :${id}`);\n+    dispatch({ type: SET_EDIT_JOB, payload: { id } });\n   };\n   const deleteJob = (id) => {\n     console.log(`delete job :${id}`);\n   };\n"
                },
                {
                    "date": 1684013851465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,8 +235,13 @@\n \n   const setEditJob = (id) => {\n     dispatch({ type: SET_EDIT_JOB, payload: { id } });\n   };\n+\n+  const editJob = () => {\n+    console.log('edit job');\n+  };\n+\n   const deleteJob = (id) => {\n     console.log(`delete job :${id}`);\n   };\n \n"
                },
                {
                    "date": 1684013916988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -260,9 +260,10 @@\n         clearValues,\n         createJob,\n         getJobs,\n         setEditJob,\n-        deleteJob\n+        deleteJob,\n+        editJob\n       }}\n     >\n       {children}\n     </AppContext.Provider>\n"
                },
                {
                    "date": 1684032019918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,10 @@\n   CREATE_JOB_SUCCESS,\n   CREATE_JOB_ERROR,\n   GET_JOBS_BEGIN,\n   GET_JOBS_SUCCESS,\n-  SET_EDIT_JOB\n+  SET_EDIT_JOB,\n+  DELETE_JOB_BEGIN\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n"
                },
                {
                    "date": 1684032231103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,10 +241,17 @@\n   const editJob = () => {\n     console.log('edit job');\n   };\n \n-  const deleteJob = (id) => {\n-    console.log(`delete job :${id}`);\n+  const deleteJob = async (id) => {\n+    dispatch({ type: DELETE_JOB_BEGIN });\n+    try {\n+      await authFetch.delete(`/jobs/${jobId}`);\n+      getJobs();\n+    } catch (error) {\n+      console.log(error.response);\n+      // logoutUser()\n+    }\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1684032270412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,9 +241,9 @@\n   const editJob = () => {\n     console.log('edit job');\n   };\n \n-  const deleteJob = async (id) => {\n+  const deleteJob = async (jobId) => {\n     dispatch({ type: DELETE_JOB_BEGIN });\n     try {\n       await authFetch.delete(`/jobs/${jobId}`);\n       getJobs();\n"
                },
                {
                    "date": 1684033131315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,12 @@\n   CREATE_JOB_ERROR,\n   GET_JOBS_BEGIN,\n   GET_JOBS_SUCCESS,\n   SET_EDIT_JOB,\n-  DELETE_JOB_BEGIN\n+  DELETE_JOB_BEGIN,\n+  EDIT_JOB_BEGIN,\n+  EDIT_JOB_SUCCESS,\n+  EDIT_JOB_ERROR\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n"
                },
                {
                    "date": 1684033342946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,9 +241,12 @@\n     dispatch({ type: SET_EDIT_JOB, payload: { id } });\n   };\n \n   const editJob = () => {\n-    console.log('edit job');\n+    dispatch({ type: EDIT_JOB_BEGIN });\n+    try {\n+      const { position, company, jobLocation, jobType, status } = state;\n+    } catch (error) {}\n   };\n \n   const deleteJob = async (jobId) => {\n     dispatch({ type: DELETE_JOB_BEGIN });\n"
                },
                {
                    "date": 1684033451671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,12 +240,13 @@\n   const setEditJob = (id) => {\n     dispatch({ type: SET_EDIT_JOB, payload: { id } });\n   };\n \n-  const editJob = () => {\n+  const editJob = async () => {\n     dispatch({ type: EDIT_JOB_BEGIN });\n     try {\n       const { position, company, jobLocation, jobType, status } = state;\n+      await authFetch.patch(`/jobs/${state.editJobId}`);\n     } catch (error) {}\n   };\n \n   const deleteJob = async (jobId) => {\n"
                },
                {
                    "date": 1684033511339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,9 +244,15 @@\n   const editJob = async () => {\n     dispatch({ type: EDIT_JOB_BEGIN });\n     try {\n       const { position, company, jobLocation, jobType, status } = state;\n-      await authFetch.patch(`/jobs/${state.editJobId}`);\n+      await authFetch.patch(`/jobs/${state.editJobId}`, {\n+        company,\n+        position,\n+        jobLocation,\n+        jobType,\n+        status\n+      });\n     } catch (error) {}\n   };\n \n   const deleteJob = async (jobId) => {\n"
                },
                {
                    "date": 1684033798987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -251,9 +251,18 @@\n         jobLocation,\n         jobType,\n         status\n       });\n-    } catch (error) {}\n+      dispatch({ type: CLEAR_VALUES });\n+    } catch (error) {\n+      if (error.response.status === 401) return;\n+      dispatch({\n+        type: EDIT_JOB_ERROR,\n+        payload: {\n+          msg: error.response.data.msg\n+        }\n+      });\n+    }\n   };\n \n   const deleteJob = async (jobId) => {\n     dispatch({ type: DELETE_JOB_BEGIN });\n"
                },
                {
                    "date": 1684033835091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -251,8 +251,9 @@\n         jobLocation,\n         jobType,\n         status\n       });\n+      dispatch({ type: EDIT_JOB_SUCCESS });\n       dispatch({ type: CLEAR_VALUES });\n     } catch (error) {\n       if (error.response.status === 401) return;\n       dispatch({\n"
                },
                {
                    "date": 1684033948473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,8 +273,9 @@\n     } catch (error) {\n       console.log(error.response);\n       // logoutUser()\n     }\n+    clearAlert();\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1684035064900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -262,8 +262,9 @@\n           msg: error.response.data.msg\n         }\n       });\n     }\n+    clearAlert();\n   };\n \n   const deleteJob = async (jobId) => {\n     dispatch({ type: DELETE_JOB_BEGIN });\n@@ -273,9 +274,8 @@\n     } catch (error) {\n       console.log(error.response);\n       // logoutUser()\n     }\n-    clearAlert();\n   };\n \n   return (\n     <AppContext.Provider\n"
                },
                {
                    "date": 1684283704594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,12 @@\n   SET_EDIT_JOB,\n   DELETE_JOB_BEGIN,\n   EDIT_JOB_BEGIN,\n   EDIT_JOB_SUCCESS,\n-  EDIT_JOB_ERROR\n+  EDIT_JOB_ERROR,\n+  SHOW_STATS_BEGIN,\n+  SHOW_STATS_SUCCESS\n+\n } from './actions';\n \n const token = localStorage.getItem('token');\n const user = localStorage.getItem('user');\n@@ -53,9 +56,11 @@\n   status: 'pending',\n   jobs: [],\n   totalJobs: 0,\n   numberOfPages: 1,\n-  page: 1\n+  page: 1,\n+  stats: {},\n+  monthlyApplications: [],\n };\n const AppContext = React.createContext();\n \n const AppProvider = ({ children }) => {\n"
                },
                {
                    "date": 1684284124190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,8 +279,22 @@\n       console.log(error.response);\n       // logoutUser()\n     }\n   };\n+  const showStats = async () => {\n+    dispatch({ type: SHOW_STATS_BEGIN })\n+    try {\n+      const { data } = await authFetch('/jobs/stats')\n+      dispatch({\n+        type: SHOW_STATS_SUCCESS,\n+        payload: {\n+          stats:data.defaultStats, monthlyApplications: data.monthlyApplications\n+        }\n+      })\n+    } catch (error) {\n+      \n+    }\n+  }\n \n   return (\n     <AppContext.Provider\n       value={{\n"
                },
                {
                    "date": 1684284147297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -287,9 +287,9 @@\n       dispatch({\n         type: SHOW_STATS_SUCCESS,\n         payload: {\n           stats: data.defaultStats,\n-          monthlyApplications: data.monthlyApplications\n+          monthlyApplications: data.monthlyApplications,\n         }\n       });\n     } catch (error) {}\n   };\n"
                },
                {
                    "date": 1684284197932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,12 @@\n           stats: data.defaultStats,\n           monthlyApplications: data.monthlyApplications\n         }\n       });\n-    } catch (error) {}\n+    } catch (error) {\n+      console.log(error.response);\n+      //logoutUser()\n+    }\n   };\n \n   return (\n     <AppContext.Provider\n"
                }
            ],
            "date": 1683462872419,
            "name": "Commit-0",
            "content": "import React, { useReducer, useContext } from 'react';\nimport reducer from './reducer';\nimport axios from 'axios';\nimport {\n  DISPLAY_ALERT,\n  CLEAR_ALERT,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_ERROR,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_ERROR,\n  TOGGLE_SIDEBAR\n} from './actions';\n\nconst token = localStorage.getItem('token');\nconst user = localStorage.getItem('user');\nconst userLocation = localStorage.getItem('location');\n\nconst initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertText: '',\n  alertType: '',\n  user: user ? JSON.parse(user) : null,\n  token: token,\n  userLocation: userLocation || '',\n  jobLocation: userLocation || ''\n};\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const displayAlert = () => {\n    dispatch({ type: DISPLAY_ALERT });\n    clearAlert();\n  };\n\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({ type: CLEAR_ALERT });\n    }, 3000);\n  };\n\n  const addUserToLocalStorage = ({ user, token, location }) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('token', token);\n    localStorage.setItem('location', location);\n  };\n  const removeUserFromLocalStorage = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('location');\n  };\n\n  const registerUser = async (currentUser) => {\n    dispatch({ type: REGISTER_USER_BEGIN });\n    try {\n      const response = await axios.post('/api/v1/auth/register', currentUser);\n      // console.log(response);\n      const { user, token, location } = response.data;\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: { user, token, location }\n      });\n      addUserToLocalStorage({ user, token, location });\n    } catch (error) {\n      // console.log(error.response);\n      dispatch({\n        type: REGISTER_USER_ERROR,\n        payload: { msg: error.response.data.msg }\n      });\n    }\n    clearAlert();\n  };\n\n  const loginUser = async (currentUser) => {\n    dispatch({ type: LOGIN_USER_BEGIN });\n    try {\n      const { data } = await axios.post('/api/v1/auth/login', currentUser);\n      const { user, token, location } = data;\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: { user, token, location }\n      });\n      addUserToLocalStorage({ user, token, location });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_ERROR,\n        payload: { msg: error.response.data.msg }\n      });\n    }\n    clearAlert();\n  };\n\n  return (\n    <AppContext.Provider\n      value={{ ...state, displayAlert, clearAlert, registerUser, loginUser }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nconst useAppContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppProvider, initialState, useAppContext };\n"
        }
    ]
}